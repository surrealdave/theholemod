// Date: 24/04/2020 3:35:39 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

public static class ModelDF extends ModelBase {
	// fields
	ModelRenderer tail3;
	ModelRenderer body2;
	ModelRenderer body1;
	ModelRenderer tail1;
	ModelRenderer neck1;
	ModelRenderer tail2;
	ModelRenderer dome;
	ModelRenderer nose;
	ModelRenderer ll34;
	ModelRenderer ll31;
	ModelRenderer ll32;
	ModelRenderer ll33;
	ModelRenderer rl11;
	ModelRenderer rl12;
	ModelRenderer rl13;
	ModelRenderer rl14;
	ModelRenderer ll11;
	ModelRenderer ll12;
	ModelRenderer ll14;
	ModelRenderer ll13;
	ModelRenderer ll24;
	ModelRenderer ll23;
	ModelRenderer ll22;
	ModelRenderer ll21;
	ModelRenderer rl34;
	ModelRenderer rl33;
	ModelRenderer rl32;
	ModelRenderer rl31;
	ModelRenderer rl24;
	ModelRenderer rl23;
	ModelRenderer rl22;
	ModelRenderer rl21;
	ModelRenderer head;

	public ModelDF() {
		textureWidth = 256;
		textureHeight = 128;

		tail3 = new ModelRenderer(this, 202, 0);
		tail3.addBox(-4F, -10F, 48F, 8, 8, 19);
		tail3.setRotationPoint(0F, -9F, 30F);
		tail3.setTextureSize(256, 128);
		tail3.mirror = true;
		setRotation(tail3, -0.3141593F, 0F, 0F);
		body2 = new ModelRenderer(this, 0, 0);
		body2.addBox(-12F, -10F, 0F, 24, 24, 32);
		body2.setRotationPoint(0F, -10F, 0F);
		body2.setTextureSize(256, 128);
		body2.mirror = true;
		setRotation(body2, 0F, 0F, 0F);
		body1 = new ModelRenderer(this, 114, 0);
		body1.addBox(-9F, -10F, -24F, 18, 19, 26);
		body1.setRotationPoint(0F, -10F, 0F);
		body1.setTextureSize(256, 128);
		body1.mirror = true;
		setRotation(body1, -0.2094395F, 0F, 0F);
		tail1 = new ModelRenderer(this, 114, 0);
		tail1.addBox(-9F, -10F, -2F, 18, 19, 26);
		tail1.setRotationPoint(0F, -9F, 30F);
		tail1.setTextureSize(256, 128);
		tail1.mirror = true;
		setRotation(tail1, -0.1570796F, 0F, 0F);
		neck1 = new ModelRenderer(this, 176, 48);
		neck1.addBox(-7F, -2F, -47F, 14, 14, 26);
		neck1.setRotationPoint(0F, -9F, 0F);
		neck1.setTextureSize(256, 128);
		neck1.mirror = true;
		setRotation(neck1, -0.5934119F, 0F, 0F);
		tail2 = new ModelRenderer(this, 176, 48);
		tail2.addBox(-7F, -10F, 23F, 14, 14, 26);
		tail2.setRotationPoint(0F, -9F, 30F);
		tail2.setTextureSize(256, 128);
		tail2.mirror = true;
		setRotation(tail2, -0.2443461F, 0F, 0F);
		dome = new ModelRenderer(this, 0, 90);
		dome.addBox(-8.5F, -9F, -17F, 17, 5, 18);
		dome.setRotationPoint(0F, -31F, -37F);
		dome.setTextureSize(256, 128);
		dome.mirror = true;
		setRotation(dome, 0.0872665F, 0F, 0F);
		nose = new ModelRenderer(this, 63, 58);
		nose.addBox(-7F, -6F, -21.86667F, 14, 13, 9);
		nose.setRotationPoint(0F, -31F, -37F);
		nose.setTextureSize(256, 128);
		nose.mirror = true;
		setRotation(nose, 0.1396263F, 0F, 0F);
		ll34 = new ModelRenderer(this, 167, 48);
		ll34.addBox(4.5F, 26F, -5F, 6, 5, 9);
		ll34.setRotationPoint(0F, -7F, -9F);
		ll34.setTextureSize(256, 128);
		ll34.mirror = true;
		setRotation(ll34, 0F, 0F, 0F);
		ll31 = new ModelRenderer(this, 141, 97);
		ll31.addBox(4F, 0F, -6F, 7, 14, 12);
		ll31.setRotationPoint(0F, -7F, -9F);
		ll31.setTextureSize(256, 128);
		ll31.mirror = true;
		setRotation(ll31, -0.0349066F, 0F, 0F);
		ll32 = new ModelRenderer(this, 144, 71);
		ll32.addBox(4.5F, 11F, -7F, 6, 14, 8);
		ll32.setRotationPoint(0F, -7F, -9F);
		ll32.setTextureSize(256, 128);
		ll32.mirror = true;
		setRotation(ll32, 0.2617994F, 0F, 0F);
		ll33 = new ModelRenderer(this, 136, 48);
		ll33.addBox(5F, 19F, 2F, 5, 10, 8);
		ll33.setRotationPoint(0F, -7F, -9F);
		ll33.setTextureSize(256, 128);
		ll33.mirror = true;
		setRotation(ll33, -0.2094395F, 0F, 0F);
		rl11 = new ModelRenderer(this, 141, 97);
		rl11.addBox(-13F, 0F, -6F, 7, 14, 12);
		rl11.setRotationPoint(0F, -7F, 28F);
		rl11.setTextureSize(256, 128);
		rl11.mirror = true;
		setRotation(rl11, -0.3665191F, 0F, 0F);
		rl12 = new ModelRenderer(this, 144, 71);
		rl12.addBox(-12.5F, 11F, -4F, 6, 14, 8);
		rl12.setRotationPoint(0F, -7F, 28F);
		rl12.setTextureSize(256, 128);
		rl12.mirror = true;
		setRotation(rl12, -0.3316126F, 0F, 0F);
		rl13 = new ModelRenderer(this, 136, 48);
		rl13.addBox(-12F, 15F, -15F, 5, 10, 8);
		rl13.setRotationPoint(0F, -7F, 28F);
		rl13.setTextureSize(256, 128);
		rl13.mirror = true;
		setRotation(rl13, 0.3490659F, 0F, 0F);
		rl14 = new ModelRenderer(this, 167, 48);
		rl14.addBox(-12.5F, 26F, -7F, 6, 5, 9);
		rl14.setRotationPoint(0F, -7F, 28F);
		rl14.setTextureSize(256, 128);
		rl14.mirror = true;
		setRotation(rl14, 0F, 0F, 0F);
		ll11 = new ModelRenderer(this, 141, 97);
		ll11.addBox(6F, 0F, -6F, 7, 14, 12);
		ll11.setRotationPoint(0F, -7F, 28F);
		ll11.setTextureSize(256, 128);
		ll11.mirror = true;
		setRotation(ll11, -0.3665191F, 0F, 0F);
		ll12 = new ModelRenderer(this, 144, 71);
		ll12.addBox(6.5F, 11F, -4F, 6, 14, 8);
		ll12.setRotationPoint(0F, -7F, 28F);
		ll12.setTextureSize(256, 128);
		ll12.mirror = true;
		setRotation(ll12, -0.3316126F, 0F, 0F);
		ll14 = new ModelRenderer(this, 167, 48);
		ll14.addBox(6.5F, 26F, -7F, 6, 5, 9);
		ll14.setRotationPoint(0F, -7F, 28F);
		ll14.setTextureSize(256, 128);
		ll14.mirror = true;
		setRotation(ll14, 0F, 0F, 0F);
		ll13 = new ModelRenderer(this, 136, 48);
		ll13.addBox(7F, 15F, -15F, 5, 10, 8);
		ll13.setRotationPoint(0F, -7F, 28F);
		ll13.setTextureSize(256, 128);
		ll13.mirror = true;
		setRotation(ll13, 0.3490659F, 0F, 0F);
		ll24 = new ModelRenderer(this, 167, 48);
		ll24.addBox(6.5F, 26F, -5F, 6, 5, 9);
		ll24.setRotationPoint(0F, -7F, 7F);
		ll24.setTextureSize(256, 128);
		ll24.mirror = true;
		setRotation(ll24, 0F, 0F, 0F);
		ll23 = new ModelRenderer(this, 136, 48);
		ll23.addBox(7F, 19F, 2F, 5, 10, 8);
		ll23.setRotationPoint(0F, -7F, 7F);
		ll23.setTextureSize(256, 128);
		ll23.mirror = true;
		setRotation(ll23, -0.2094395F, 0F, 0F);
		ll22 = new ModelRenderer(this, 144, 71);
		ll22.addBox(6.5F, 11F, -7F, 6, 14, 8);
		ll22.setRotationPoint(0F, -7F, 7F);
		ll22.setTextureSize(256, 128);
		ll22.mirror = true;
		setRotation(ll22, 0.2617994F, 0F, 0F);
		ll21 = new ModelRenderer(this, 141, 97);
		ll21.addBox(6F, 0F, -6F, 7, 14, 12);
		ll21.setRotationPoint(0F, -7F, 7F);
		ll21.setTextureSize(256, 128);
		ll21.mirror = true;
		setRotation(ll21, -0.1919862F, 0F, 0F);
		rl34 = new ModelRenderer(this, 167, 48);
		rl34.addBox(-10.5F, 26F, -5F, 6, 5, 9);
		rl34.setRotationPoint(0F, -7F, -9F);
		rl34.setTextureSize(256, 128);
		rl34.mirror = true;
		setRotation(rl34, 0F, 0F, 0F);
		rl33 = new ModelRenderer(this, 136, 48);
		rl33.addBox(-10F, 19F, 2F, 5, 10, 8);
		rl33.setRotationPoint(0F, -7F, -9F);
		rl33.setTextureSize(256, 128);
		rl33.mirror = true;
		setRotation(rl33, -0.2094395F, 0F, 0F);
		rl32 = new ModelRenderer(this, 144, 71);
		rl32.addBox(-10.5F, 11F, -7F, 6, 14, 8);
		rl32.setRotationPoint(0F, -7F, -9F);
		rl32.setTextureSize(256, 128);
		rl32.mirror = true;
		setRotation(rl32, 0.2617994F, 0F, 0F);
		rl31 = new ModelRenderer(this, 141, 97);
		rl31.addBox(-11F, 0F, -6F, 7, 14, 12);
		rl31.setRotationPoint(0F, -7F, -9F);
		rl31.setTextureSize(256, 128);
		rl31.mirror = true;
		setRotation(rl31, -0.0349066F, 0F, 0F);
		rl24 = new ModelRenderer(this, 167, 48);
		rl24.addBox(-12.5F, 26F, -5F, 6, 5, 9);
		rl24.setRotationPoint(0F, -7F, 7F);
		rl24.setTextureSize(256, 128);
		rl24.mirror = true;
		setRotation(rl24, 0F, 0F, 0F);
		rl23 = new ModelRenderer(this, 136, 48);
		rl23.addBox(-12F, 19F, 2F, 5, 10, 8);
		rl23.setRotationPoint(0F, -7F, 7F);
		rl23.setTextureSize(256, 128);
		rl23.mirror = true;
		setRotation(rl23, -0.2094395F, 0F, 0F);
		rl22 = new ModelRenderer(this, 144, 71);
		rl22.addBox(-12.5F, 11F, -7F, 6, 14, 8);
		rl22.setRotationPoint(0F, -7F, 7F);
		rl22.setTextureSize(256, 128);
		rl22.mirror = true;
		setRotation(rl22, 0.2617994F, 0F, 0F);
		rl21 = new ModelRenderer(this, 141, 97);
		rl21.addBox(-13F, 0F, -6F, 7, 14, 12);
		rl21.setRotationPoint(0F, -7F, 7F);
		rl21.setTextureSize(256, 128);
		rl21.mirror = true;
		setRotation(rl21, -0.1919862F, 0F, 0F);
		head = new ModelRenderer(this, 0, 58);
		head.addBox(-8F, -6F, -14F, 16, 15, 14);
		head.setRotationPoint(0F, -31F, -37F);
		head.setTextureSize(256, 128);
		head.mirror = true;
		setRotation(head, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		tail3.render(f5);
		body2.render(f5);
		body1.render(f5);
		tail1.render(f5);
		neck1.render(f5);
		tail2.render(f5);
		dome.render(f5);
		nose.render(f5);
		ll34.render(f5);
		ll31.render(f5);
		ll32.render(f5);
		ll33.render(f5);
		rl11.render(f5);
		rl12.render(f5);
		rl13.render(f5);
		rl14.render(f5);
		ll11.render(f5);
		ll12.render(f5);
		ll14.render(f5);
		ll13.render(f5);
		ll24.render(f5);
		ll23.render(f5);
		ll22.render(f5);
		ll21.render(f5);
		rl34.render(f5);
		rl33.render(f5);
		rl32.render(f5);
		rl31.render(f5);
		rl24.render(f5);
		rl23.render(f5);
		rl22.render(f5);
		rl21.render(f5);
		head.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
		this.rl24.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.dome.rotateAngleY = f3 / (180F / (float) Math.PI);
		this.dome.rotateAngleX = f4 / (180F / (float) Math.PI);
		this.rl21.rotateAngleX = MathHelper.cos(f * 0.6662F + (float) Math.PI) * f1;
		this.ll21.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.rl23.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.rl22.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.ll13.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.head.rotateAngleY = f3 / (180F / (float) Math.PI);
		this.head.rotateAngleX = f4 / (180F / (float) Math.PI);
		this.ll14.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.ll33.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
		this.ll11.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.ll34.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
		this.ll12.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.nose.rotateAngleY = f3 / (180F / (float) Math.PI);
		this.nose.rotateAngleX = f4 / (180F / (float) Math.PI);
		this.rl14.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.rl13.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.ll31.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
		this.rl32.rotateAngleX = MathHelper.cos(f * 0.6662F + (float) Math.PI) * f1;
		this.ll32.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1;
		this.rl31.rotateAngleX = MathHelper.cos(f * 0.6662F + (float) Math.PI) * f1;
		this.rl12.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.rl34.rotateAngleX = MathHelper.cos(f * 0.6662F + (float) Math.PI) * f1;
		this.rl11.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.rl33.rotateAngleX = MathHelper.cos(f * 0.6662F + (float) Math.PI) * f1;
		this.ll24.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.ll22.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.ll23.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
	}

}
