// Date: 11/12/2019 7:17:47 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

public static class ModelDongfish extends ModelBase {
	// fields
	ModelRenderer head;
	ModelRenderer body;
	ModelRenderer tail;
	ModelRenderer scungle2;
	ModelRenderer scungle1;
	ModelRenderer nuttesac;
	ModelRenderer tailfin;
	ModelRenderer backfin;
	ModelRenderer hand;

	public ModelDongfish() {
		textureWidth = 64;
		textureHeight = 32;

		head = new ModelRenderer(this, 0, 0);
		head.addBox(-1F, -1F, -2.2F, 2, 2, 2);
		head.setRotationPoint(0F, 14.8F, -5.333333F);
		head.setTextureSize(64, 32);
		head.mirror = true;
		setRotation(head, 0.2602503F, 0F, 0F);
		body = new ModelRenderer(this, 0, 4);
		body.addBox(-1F, -1.2F, 0F, 2, 2, 7);
		body.setRotationPoint(0F, 15F, -6F);
		body.setTextureSize(64, 32);
		body.mirror = true;
		setRotation(body, 0F, 0F, 0F);
		tail = new ModelRenderer(this, 12, 0);
		tail.addBox(-0.5F, -1F, 0F, 1, 2, 5);
		tail.setRotationPoint(0F, 14.86667F, 0.6F);
		tail.setTextureSize(64, 32);
		tail.mirror = true;
		setRotation(tail, -0.0546319F, 0F, 0F);
		scungle2 = new ModelRenderer(this, 0, 8);
		scungle2.addBox(-0.5F, 1F, 1F, 1, 1, 2);
		scungle2.setRotationPoint(0F, 15.6F, -3.333333F);
		scungle2.setTextureSize(64, 32);
		scungle2.mirror = true;
		setRotation(scungle2, -0.9037501F, 0F, 0F);
		scungle1 = new ModelRenderer(this, 11, 8);
		scungle1.addBox(-0.5F, 0F, 0F, 1, 2, 1);
		scungle1.setRotationPoint(0F, 15.6F, -4F);
		scungle1.setTextureSize(64, 32);
		scungle1.mirror = true;
		setRotation(scungle1, -0.1289891F, 0F, 0F);
		nuttesac = new ModelRenderer(this, 0, 13);
		nuttesac.addBox(-2.5F, 0F, -2.5F, 5, 5, 5);
		nuttesac.setRotationPoint(0F, 19F, -3F);
		nuttesac.setTextureSize(64, 32);
		nuttesac.mirror = true;
		setRotation(nuttesac, 1.047198F, 0F, 0F);
		tailfin = new ModelRenderer(this, 20, 0);
		tailfin.addBox(0F, -2F, 0.4F, 0, 1, 2);
		tailfin.setRotationPoint(0F, 15F, 0.6F);
		tailfin.setTextureSize(64, 32);
		tailfin.mirror = true;
		setRotation(tailfin, 0F, 0F, 0F);
		backfin = new ModelRenderer(this, 24, 0);
		backfin.addBox(0F, -2F, 3F, 0, 1, 3);
		backfin.setRotationPoint(0F, 15F, -6F);
		backfin.setTextureSize(64, 32);
		backfin.mirror = true;
		setRotation(backfin, 0F, 0F, 0F);
		hand = new ModelRenderer(this, 30, 0);
		hand.addBox(-1.5F, 0F, 0F, 3, 1, 1);
		hand.setRotationPoint(0F, 14.66667F, -5F);
		hand.setTextureSize(64, 32);
		hand.mirror = true;
		setRotation(hand, 0.2602503F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3,
			float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		head.render(f5);
		body.render(f5);
		tail.render(f5);
		scungle2.render(f5);
		scungle1.render(f5);
		nuttesac.render(f5);
		tailfin.render(f5);
		backfin.render(f5);
		hand.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3,
			float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
		this.head.rotateAngleY = f3 / (180F / (float) Math.PI);
		this.head.rotateAngleX = f4 / (180F / (float) Math.PI);
		this.tailfin.rotateAngleZ = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.nuttesac.rotateAngleZ = MathHelper.cos(f * 1.0F) * 1.0F * f1;
	}

}
