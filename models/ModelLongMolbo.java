// Date: 6/06/2020 1:23:21 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

public static class ModelLongMolbo extends ModelBase {
	// fields
	ModelRenderer neck;
	ModelRenderer body;
	ModelRenderer rightleg;
	ModelRenderer leftleg;
	ModelRenderer rightfoot;
	ModelRenderer leftfoot;
	ModelRenderer leftleg2;
	ModelRenderer rightleg2;
	ModelRenderer head;

	public ModelLongMolbo() {
		textureWidth = 64;
		textureHeight = 32;

		neck = new ModelRenderer(this, 24, 0);
		neck.addBox(-2F, -4F, -2F, 4, 4, 4);
		neck.setRotationPoint(0F, -12F, 0F);
		neck.setTextureSize(64, 32);
		neck.mirror = true;
		setRotation(neck, 0F, 0F, 0F);
		body = new ModelRenderer(this, 16, 16);
		body.addBox(-4F, 0F, -2F, 8, 12, 4);
		body.setRotationPoint(0F, -12F, 0F);
		body.setTextureSize(64, 32);
		body.mirror = true;
		setRotation(body, 0F, 0F, 0F);
		rightleg = new ModelRenderer(this, 0, 16);
		rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
		rightleg.setRotationPoint(-2F, 0F, 0F);
		rightleg.setTextureSize(64, 32);
		rightleg.mirror = true;
		setRotation(rightleg, -0.1396263F, 0F, 0F);
		leftleg = new ModelRenderer(this, 0, 16);
		leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
		leftleg.setRotationPoint(2F, 0F, 0F);
		leftleg.setTextureSize(64, 32);
		leftleg.mirror = true;
		setRotation(leftleg, -0.1396263F, 0F, 0F);
		rightfoot = new ModelRenderer(this, 0, 16);
		rightfoot.addBox(-2F, 22F, -3F, 4, 2, 4);
		rightfoot.setRotationPoint(-2F, 0F, 0F);
		rightfoot.setTextureSize(64, 32);
		rightfoot.mirror = true;
		setRotation(rightfoot, 0F, 0F, 0F);
		leftfoot = new ModelRenderer(this, 0, 16);
		leftfoot.addBox(-2F, 22F, -3F, 4, 2, 4);
		leftfoot.setRotationPoint(2F, 0F, 0F);
		leftfoot.setTextureSize(64, 32);
		leftfoot.mirror = true;
		setRotation(leftfoot, 0F, 0F, 0F);
		leftleg2 = new ModelRenderer(this, 0, 16);
		leftleg2.addBox(-2F, 11F, -5F, 4, 12, 4);
		leftleg2.setRotationPoint(2F, 0F, 0F);
		leftleg2.setTextureSize(64, 32);
		leftleg2.mirror = true;
		setRotation(leftleg2, 0.1396263F, 0F, 0F);
		rightleg2 = new ModelRenderer(this, 0, 16);
		rightleg2.addBox(-2F, 11F, -5F, 4, 12, 4);
		rightleg2.setRotationPoint(-2F, 0F, 0F);
		rightleg2.setTextureSize(64, 32);
		rightleg2.mirror = true;
		setRotation(rightleg2, 0.1396263F, 0F, 0F);
		head = new ModelRenderer(this, 0, 0);
		head.addBox(-4F, -12F, -4F, 8, 8, 8);
		head.setRotationPoint(0F, -12F, 0F);
		head.setTextureSize(64, 32);
		head.mirror = true;
		setRotation(head, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		neck.render(f5);
		body.render(f5);
		rightleg.render(f5);
		leftleg.render(f5);
		rightfoot.render(f5);
		leftfoot.render(f5);
		leftleg2.render(f5);
		rightleg2.render(f5);
		head.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
		this.leftfoot.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.head.rotateAngleY = f3 / (180F / (float) Math.PI);
		this.head.rotateAngleX = f4 / (180F / (float) Math.PI);
		this.rightleg2.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.rightleg.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.leftleg.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
		this.rightfoot.rotateAngleX = MathHelper.cos(f * 1.0F) * 1.0F * f1;
		this.neck.rotateAngleY = f3 / (180F / (float) Math.PI);
		this.neck.rotateAngleX = f4 / (180F / (float) Math.PI);
		this.leftleg2.rotateAngleX = MathHelper.cos(f * 1.0F) * -1.0F * f1;
	}

}
