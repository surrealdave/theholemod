
package pile.item;

import pile.procedure.ProcedureBaseballCapRatHelmetTickEvent;

import pile.creativetab.TabThePile;

import pile.ElementsThePile;

import net.minecraftforge.fml.relauncher.SideOnly;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.common.util.EnumHelper;
import net.minecraftforge.client.model.ModelLoader;
import net.minecraftforge.client.event.ModelRegistryEvent;

import net.minecraft.world.World;
import net.minecraft.item.ItemStack;
import net.minecraft.item.ItemArmor;
import net.minecraft.item.Item;
import net.minecraft.inventory.EntityEquipmentSlot;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.Entity;
import net.minecraft.client.renderer.block.model.ModelResourceLocation;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelBase;

@ElementsThePile.ModElement.Tag
public class ItemBaseballCapRat extends ElementsThePile.ModElement {
	@GameRegistry.ObjectHolder("pile:baseballcaprathelmet")
	public static final Item helmet = null;
	@GameRegistry.ObjectHolder("pile:baseballcapratbody")
	public static final Item body = null;
	@GameRegistry.ObjectHolder("pile:baseballcapratlegs")
	public static final Item legs = null;
	@GameRegistry.ObjectHolder("pile:baseballcapratboots")
	public static final Item boots = null;
	public ItemBaseballCapRat(ElementsThePile instance) {
		super(instance, 84);
	}

	@Override
	public void initElements() {
		ItemArmor.ArmorMaterial enuma = EnumHelper.addArmorMaterial("BASEBALLCAPRAT", "pile:baseballcap_", 10, new int[]{2, 5, 6, 1}, 40, null, 0f);
		elements.items.add(() -> new ItemArmor(enuma, 0, EntityEquipmentSlot.HEAD) {
			@Override
			@SideOnly(Side.CLIENT)
			public ModelBiped getArmorModel(EntityLivingBase living, ItemStack stack, EntityEquipmentSlot slot, ModelBiped defaultModel) {
				ModelBiped armorModel = new ModelBiped();
				armorModel.bipedHead = new ModelBaseballCap().hat2;
				armorModel.isSneak = living.isSneaking();
				armorModel.isRiding = living.isRiding();
				armorModel.isChild = living.isChild();
				return armorModel;
			}

			@Override
			public void onArmorTick(World world, EntityPlayer entity, ItemStack itemstack) {
				super.onArmorTick(world, entity, itemstack);
				int x = (int) entity.posX;
				int y = (int) entity.posY;
				int z = (int) entity.posZ;
				{
					java.util.HashMap<String, Object> $_dependencies = new java.util.HashMap<>();
					$_dependencies.put("entity", entity);
					ProcedureBaseballCapRatHelmetTickEvent.executeProcedure($_dependencies);
				}
			}
		}.setUnlocalizedName("baseballcaprathelmet").setRegistryName("baseballcaprathelmet").setCreativeTab(TabThePile.tab));
	}

	@SideOnly(Side.CLIENT)
	@Override
	public void registerModels(ModelRegistryEvent event) {
		ModelLoader.setCustomModelResourceLocation(helmet, 0, new ModelResourceLocation("pile:baseballcaprathelmet", "inventory"));
	}
	// Date: 21/12/2019 4:14:10 PM
	// Template version 1.1
	// Java generated by Techne
	// Keep in mind that you still need to fill in some blanks
	// - ZeuX
	public static class ModelBaseballCap extends ModelBase {
		// fields
		ModelRenderer hat2;
		ModelRenderer hat1;
		public ModelBaseballCap() {
			textureWidth = 64;
			textureHeight = 32;
			hat2 = new ModelRenderer(this, 3, 6);
			hat2.addBox(-4F, -5.1F, -9F, 8, 1, 5);
			hat2.setRotationPoint(0F, 0F, 0F);
			hat2.setTextureSize(64, 32);
			hat2.mirror = true;
			setRotation(hat2, 0F, 0F, 0F);
			hat1 = new ModelRenderer(this, 0, 0);
			hat1.addBox(-4F, -8.1F, -4F, 8, 4, 8);
			hat1.setRotationPoint(0F, 0F, 0F);
			hat1.setTextureSize(64, 32);
			hat1.mirror = true;
			setRotation(hat1, 0F, 0F, 0F);
		}

		public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
			super.render(entity, f, f1, f2, f3, f4, f5);
			setRotationAngles(f, f1, f2, f3, f4, f5, entity);
			hat2.render(f5);
			hat1.render(f5);
		}

		private void setRotation(ModelRenderer model, float x, float y, float z) {
			model.rotateAngleX = x;
			model.rotateAngleY = y;
			model.rotateAngleZ = z;
		}

		public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
			super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		}
	}
}
